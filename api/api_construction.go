/*
 * Rosetta
 *
 * A standard for blockchain interaction
 *
 * API version: 1.2.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"encoding/json"
	"net/http"
	"strings"
)

// A ConstructionApiController binds http requests to an api service and writes the service results to the http response
type ConstructionApiController struct {
	service ConstructionApiServicer
}

// NewConstructionApiController creates a default api controller
func NewConstructionApiController(s ConstructionApiServicer) Router {
	return &ConstructionApiController{service: s}
}

// Routes returns all of the api route for the ConstructionApiController
func (c *ConstructionApiController) Routes() Routes {
	return Routes{
		{
			"TransactionConstruction",
			strings.ToUpper("Post"),
			"/construction/metadata",
			c.TransactionConstruction,
		},
		{
			"TransactionSubmit",
			strings.ToUpper("Post"),
			"/construction/submit",
			c.TransactionSubmit,
		},
	}
}

// TransactionConstruction - Get Transaction Construction Metadata
func (c *ConstructionApiController) TransactionConstruction(w http.ResponseWriter, r *http.Request) {
	transactionConstructionRequest := &TransactionConstructionRequest{}
	if err := json.NewDecoder(r.Body).Decode(&transactionConstructionRequest); err != nil {
		w.WriteHeader(500)
		return
	}

	result, err := c.service.TransactionConstruction(*transactionConstructionRequest)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// TransactionSubmit - Submit a Signed Transaction
func (c *ConstructionApiController) TransactionSubmit(w http.ResponseWriter, r *http.Request) {
	transactionSubmitRequest := &TransactionSubmitRequest{}
	if err := json.NewDecoder(r.Body).Decode(&transactionSubmitRequest); err != nil {
		w.WriteHeader(500)
		return
	}

	result, err := c.service.TransactionSubmit(*transactionSubmitRequest)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}
