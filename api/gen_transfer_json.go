// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package api

import (
	"encoding/json"
	"errors"
	"math/big"

	"github.com/ethereum/go-ethereum/core/types"
)

// MarshalJSON marshals as JSON.
func (t TransferMetadata) MarshalJSON() ([]byte, error) {
	type TransferMetadata struct {
		Balance *big.Int      `json:"balance" gencodec:"required"`
		Txdata  *types.Txdata `json:"txdata"`
	}
	var enc TransferMetadata
	enc.Balance = t.Balance
	enc.Txdata = t.Txdata
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (t *TransferMetadata) UnmarshalJSON(input []byte) error {
	type TransferMetadata struct {
		Balance *big.Int      `json:"balance" gencodec:"required"`
		Txdata  *types.Txdata `json:"txdata"`
	}
	var dec TransferMetadata
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Balance == nil {
		return errors.New("missing required field 'balance' for TransferMetadata")
	}
	t.Balance = dec.Balance
	if dec.Txdata != nil {
		t.Txdata = dec.Txdata
	}
	return nil
}
