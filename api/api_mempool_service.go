/*
 * Rosetta
 *
 * A standard for blockchain interaction
 *
 * API version: 1.2.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"errors"

	"github.com/celo-org/rosetta/celo"
	"github.com/celo-org/rosetta/celo/client"
)

// MempoolApiService is a service that implents the logic for the MempoolApiServicer
// This service should implement the business logic for every endpoint for the MempoolApi API.
// Include any external packages or services that will be required by this service.
type MempoolApiService struct {
	celoClient  *client.CeloClient
	chainParams *celo.ChainParameters
}

// NewMempoolApiService creates a default api service
func NewMempoolApiService(celoClient *client.CeloClient, chainParams *celo.ChainParameters) MempoolApiServicer {
	return &MempoolApiService{
		celoClient:  celoClient,
		chainParams: chainParams,
	}
}

// Mempool - Get All Mempool Transactions
func (m *MempoolApiService) Mempool(ctx context.Context, mempoolRequest MempoolRequest) (interface{}, error) {

	err := ValidateNetworkId(&mempoolRequest.NetworkIdentifier, m.chainParams)
	if err != nil {
		return nil, err
	}

	content, err := m.celoClient.TxPool.Content(ctx)
	if err != nil {
		err = client.WrapRpcError(err)
		return nil, ErrRpcError("TxPoolContent", err)
	}

	allTransactionIds := append(TxIdsFromTxAccountMap((*content)["pending"]), TxIdsFromTxAccountMap((*content)["queued"])...)

	response := MempoolResponse{
		TransactionIdentifiers: allTransactionIds,
	}
	return response, nil
}

// MempoolTransaction - Get a Mempool Transaction
func (m *MempoolApiService) MempoolTransaction(ctx context.Context, mempoolTransactionRequest MempoolTransactionRequest) (interface{}, error) {
	// TODO - update MempoolTransaction with the required logic for this service method.
	// Add api_mempool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'MempoolTransaction' not implemented")
}
