/*
 * Rosetta
 *
 * A standard for blockchain interaction
 *
 * API version: 1.2.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"errors"
)

// MempoolApiService is a service that implents the logic for the MempoolApiServicer
// This service should implement the business logic for every endpoint for the MempoolApi API. 
// Include any external packages or services that will be required by this service.
type MempoolApiService struct {
}

// NewMempoolApiService creates a default api service
func NewMempoolApiService() MempoolApiServicer {
	return &MempoolApiService{}
}

// Mempool - Get All Mempool Transactions
func (s *MempoolApiService) Mempool(mempoolRequest MempoolRequest) (interface{}, error) {
	// TODO - update Mempool with the required logic for this service method.
	// Add api_mempool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'Mempool' not implemented")
}

// MempoolTransaction - Get a Mempool Transaction
func (s *MempoolApiService) MempoolTransaction(mempoolTransactionRequest MempoolTransactionRequest) (interface{}, error) {
	// TODO - update MempoolTransaction with the required logic for this service method.
	// Add api_mempool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'MempoolTransaction' not implemented")
}
